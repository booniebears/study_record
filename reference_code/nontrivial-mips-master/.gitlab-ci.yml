variables:
  GIT_SUBMODULE_STRATEGY: recursive
  VIVADO_PATH: "/opt/Xilinx/Vivado/2018.3/bin/vivado"
  PROJECT_DIR: "vivado"
  PROJECT_NAME: "NonTrivialMIPS"
  TOP_MODULE_NAME: "nscscc_soc_top"


# all files in ip dir except *.xci are ignored, so the generated result will be cleaned every build
# to avoid generating from scratch every time, the dir should be cached
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - ${PROJECT_DIR}/${PROJECT_NAME}.srcs/sources_1/bd/bd_soc/ip
    - ${PROJECT_DIR}/${PROJECT_NAME}.sim
    - ${PROJECT_DIR}/${PROJECT_NAME}.runs
    - ${PROJECT_DIR}/${PROJECT_NAME}.cache
    - loongson/**/rtl/xilinx_ip
    - loongson/**/run_vivado/mycpu_prj1/mycpu.sim
    - loongson/**/run_vivado/mycpu_prj1/mycpu.runs
    - loongson/**/run_vivado/mycpu_prj1/mycpu.cache


stages:
  - cpu_test
  - init_loongson_projects
  - loongson_tests
  - bitstreams


before_script:
  - git checkout ${PROJECT_DIR}/${PROJECT_NAME}.srcs/sources_1/bd/bd_soc/ip
  - git checkout loongson/soc_axi_func/rtl/xilinx_ip
  - git checkout loongson/soc_axi_perf/rtl/xilinx_ip


build_ip_loongson_func:
  image: vivado:2018.3
  tags:
    - vivado
  stage: init_loongson_projects
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[func/i
  script:
    - ${VIVADO_PATH} -mode tcl -source scripts/generate_all_ips.tcl loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.xpr


build_ip_loongson_perf:
  image: vivado:2018.3
  tags:
    - vivado
  stage: init_loongson_projects
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[perf/i
  script:
    - ${VIVADO_PATH} -mode tcl -source scripts/generate_all_ips.tcl loongson/soc_axi_perf/run_vivado/mycpu_prj1/mycpu.xpr


cpu_simulation:
  image: vivado:2018.3
  tags:
    - vivado
  stage: cpu_test
  script:
    - export SIMULATION=cpu_test
    - export LOG_PATH=${PROJECT_DIR}/${PROJECT_NAME}.sim/${SIMULATION}/behav/xsim/simulate.log
    - export FLAG='Done'
    - ${VIVADO_PATH} -mode tcl -source scripts/run_simulation.tcl ${PROJECT_DIR}/${PROJECT_NAME}.xpr
    - bash scripts/check_simulation.sh
  artifacts:
    paths:
      - ${PROJECT_DIR}/${PROJECT_NAME}.sim/*/behav/xsim/simulate.log
    when: always


func_test_simulation:
  image: vivado:2018.3
  tags:
    - vivado
  stage: loongson_tests
  # run functional test only when specified, for it is too slow
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[func test\]/i
  script:
    - sed -i "s/\`define COMPILE_FULL_M/\\/\\/ \`define COMPILE_FULL_M/" src/compile_options.svh
    - export SIMULATION=sim_1
    - export LOG_PATH=loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.sim/${SIMULATION}/behav/xsim/simulate.log
    - export FLAG='\-\-\-\-PASS!!!'
    - ${VIVADO_PATH} -mode tcl -source scripts/run_simulation.tcl loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.xpr
    - bash scripts/check_simulation.sh
  artifacts:
    paths:
      - loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.sim/*/behav/xsim/simulate.log
    when: always

  
perf_test_simulation:
  image: vivado:2018.3
  tags:
    - vivado
  stage: loongson_tests
  # run performance test only when specified, for it is also slow
  # the result of performance test will not be checked
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[perf test\]/i
  script:
    - sed -i "s/\`define COMPILE_FULL_M/\\/\\/ \`define COMPILE_FULL_M/" src/compile_options.svh
    - export SIMULATION=sim_1
    - export LOG_PATH=loongson/soc_axi_perf/run_vivado/mycpu_prj1/mycpu.sim/${SIMULATION}/behav/xsim/simulate.log
    - export FLAG='All tests done!'
    - ${VIVADO_PATH} -mode tcl -source scripts/run_perf_simulations.tcl loongson/soc_axi_perf/run_vivado/mycpu_prj1/mycpu.xpr
  artifacts:
    paths:
      - loongson/soc_axi_perf/run_vivado/mycpu_prj1/mycpu.sim/*/behav/xsim/simulate.log
    when: always


func_test_bitstream:
  image: vivado:2018.3
  tags:
    - vivado
  stage: bitstreams
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[func bitstream\]/i
  script:
    - sed -i "s/\`define COMPILE_FULL_M/\\/\\/ \`define COMPILE_FULL_M/" src/compile_options.svh
    - ${VIVADO_PATH} -mode tcl -source scripts/generate_bitstream.tcl loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.xpr
  artifacts:
    paths:
      - loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.runs/impl_1/soc_axi_lite_top.bit
      - loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.runs/*/runme.log
    when: always


perf_test_bitstream:
  image: vivado:2018.3
  tags:
    - vivado
  stage: bitstreams
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[perf bitstream\]/i
  script:
    - sed -i "s/\`define COMPILE_FULL_M/\\/\\/ \`define COMPILE_FULL_M/" src/compile_options.svh
    - ${VIVADO_PATH} -mode tcl -source scripts/generate_bitstream.tcl loongson/soc_axi_perf/run_vivado/mycpu_prj1/mycpu.xpr
  artifacts:
    paths:
      - loongson/soc_axi_perf/run_vivado/mycpu_prj1/mycpu.runs/impl_1/soc_axi_lite_top.bit
      - loongson/soc_axi_perf/run_vivado/mycpu_prj1/mycpu.runs/*/runme.log
    when: always


soc_bitstream:
  image: vivado:2018.3
  tags:
    - vivado
  stage: bitstreams
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[soc bitstream\]/i
  script:
    - ${VIVADO_PATH} -mode tcl -source scripts/build_soc.tcl ${PROJECT_DIR}/${PROJECT_NAME}.xpr
  artifacts:
    paths:
      - ${PROJECT_DIR}/${PROJECT_NAME}.runs/impl_1/*.bit
      - ${PROJECT_DIR}/${PROJECT_NAME}.runs/impl_1/*.ltx
      - ${PROJECT_DIR}/${PROJECT_NAME}.runs/*/runme.log
    when: always
